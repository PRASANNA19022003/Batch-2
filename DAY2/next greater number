class Solution {
    public int[] nextGreaterElements(int[] nums) {
        // corner case
        if(nums == null) return null;
        
        int n = nums.length;
        int[] res = new int[n];
                
        Deque<Integer> stack = new ArrayDeque<>(); // to store idx
        for(int i = 0; i < 2 * n; i++){       
            int num = nums[i % n];
            while(!stack.isEmpty() && num > nums[stack.peekFirst()]){
                int idx = stack.pollFirst();
                res[idx] = num;
            }
            
            if(i < n) stack.offerFirst(i);
        }
        
        // set the max's greater element to be -1
        while(!stack.isEmpty()){
            int idx = stack.pollFirst();
            res[idx] = -1;
        }

        return res;
    }
}
